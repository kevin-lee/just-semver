"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[816],{9394:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>l,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>o});var a=n(4848),s=n(8453);const c={},l="DecVer (Decimal Version)",i={id:"decver/decver",title:"DecVer (Decimal Version)",description:"DecVer.parse",source:"@site/../generated-docs/docs/decver/decver.md",sourceDirName:"decver",slug:"/decver/",permalink:"/docs/decver/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SemVer",permalink:"/docs/semver/"}},t={},o=[{value:"<code>DecVer.parse</code>",id:"decverparse",level:2},{value:"<code>DecVer.unsafeParse</code>",id:"decverunsafeparse",level:2},{value:"DecVer with <code>pre-release</code> info",id:"decver-with-pre-release-info",level:2},{value:"DecVer with build <code>meta-info</code>",id:"decver-with-build-meta-info",level:2},{value:"DecVer with <code>pre-release</code> info and build <code>meta-info</code>",id:"decver-with-pre-release-info-and-build-meta-info",level:2},{value:"Compare <code>DecVer</code>",id:"compare-decver",level:2},{value:"Matchers",id:"matchers",level:2}];function u(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"decver-decimal-version",children:"DecVer (Decimal Version)"})}),"\n",(0,a.jsx)(r.h2,{id:"decverparse",children:(0,a.jsx)(r.code,{children:"DecVer.parse"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import just.decver.DecVer\n\nval v = DecVer.parse("1.0")\n// v: Either[DecVer.ParseError, DecVer] = Right(\n//   value = DecVer(\n//     major = Major(value = 1),\n//     minor = Minor(value = 0),\n//     pre = None,\n//     buildMetadata = None\n//   )\n// )\n\n// To render it to `String`,\nv.map(_.render)\n// res1: Either[DecVer.ParseError, String] = Right(value = "1.0")\n\n// Invalid version\nDecVer.parse("a1.0")\n// res2: Either[DecVer.ParseError, DecVer] = Left(\n//   value = Invalid(version = "a1.0")\n// )\n\n// Invalid version\nDecVer.parse("a1.0.0")\n// res3: Either[DecVer.ParseError, DecVer] = Left(\n//   value = Invalid(version = "a1.0.0")\n// )\n'})}),"\n",(0,a.jsx)(r.h2,{id:"decverunsafeparse",children:(0,a.jsx)(r.code,{children:"DecVer.unsafeParse"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import just.decver.DecVer\n\n// parse unsafe - NOT RECOMMENDED!!!\nval v = DecVer.unsafeParse("1.0")\n// v: DecVer = DecVer(\n//   major = Major(value = 1),\n//   minor = Minor(value = 0),\n//   pre = None,\n//   buildMetadata = None\n// )\n\n// to String\nv.render\n// res5: String = "1.0"\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'\n// Invalid version\nDecVer.unsafeParse("a1.0")\n// just.decver.DecVer$ParseError$Invalid: Invalue version: a1.0\n// \tat just.decver.DecVer$ParseError$.invalid(DecVer.scala:191)\n// \tat just.decver.DecVer$.$anonfun$parse$4(DecVer.scala:132)\n// \tat scala.util.Either.flatMap(Either.scala:352)\n// \tat just.decver.DecVer$.parse(DecVer.scala:104)\n// \tat just.decver.DecVer$.unsafeParse(DecVer.scala:137)\n// \tat repl.MdocSession$MdocApp4$$anonfun$2.apply(decver.md:45)\n// \tat repl.MdocSession$MdocApp4$$anonfun$2.apply(decver.md:45)\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"decver-with-pre-release-info",children:["DecVer with ",(0,a.jsx)(r.code,{children:"pre-release"})," info"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import just.decver.DecVer\n\nDecVer.parse("1.0-beta1")\n// res7: Either[DecVer.ParseError, DecVer] = Right(\n//   value = DecVer(\n//     major = Major(value = 1),\n//     minor = Minor(value = 0),\n//     pre = Some(\n//       value = PreRelease(\n//         identifier = List(\n//           Dsv(values = List(Alphabet(value = "beta"), Num(value = "1")))\n//         )\n//       )\n//     ),\n//     buildMetadata = None\n//   )\n// )\n\nval v = DecVer.parse("1.0-3.123.9a")\n// v: Either[DecVer.ParseError, DecVer] = Right(\n//   value = DecVer(\n//     major = Major(value = 1),\n//     minor = Minor(value = 0),\n//     pre = Some(\n//       value = PreRelease(\n//         identifier = List(\n//           Dsv(values = List(Num(value = "3"))),\n//           Dsv(values = List(Num(value = "123"))),\n//           Dsv(values = List(Num(value = "9"), Alphabet(value = "a")))\n//         )\n//       )\n//     ),\n//     buildMetadata = None\n//   )\n// )\n\nv.map(_.render)\n// res8: Either[DecVer.ParseError, String] = Right(value = "1.0-3.123.9a")\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"decver-with-build-meta-info",children:["DecVer with build ",(0,a.jsx)(r.code,{children:"meta-info"})]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import just.decver.DecVer\n\nval v = DecVer.parse("1.0+100.0.12abc")\n// v: Either[DecVer.ParseError, DecVer] = Right(\n//   value = DecVer(\n//     major = Major(value = 1),\n//     minor = Minor(value = 0),\n//     pre = None,\n//     buildMetadata = Some(\n//       value = BuildMetaInfo(\n//         identifier = List(\n//           Dsv(values = List(Num(value = "100"))),\n//           Dsv(values = List(Num(value = "0"))),\n//           Dsv(values = List(Num(value = "12"), Alphabet(value = "abc")))\n//         )\n//       )\n//     )\n//   )\n// )\n\nv.map(_.render)\n// res10: Either[DecVer.ParseError, String] = Right(value = "1.0+100.0.12abc")\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"decver-with-pre-release-info-and-build-meta-info",children:["DecVer with ",(0,a.jsx)(r.code,{children:"pre-release"})," info and build ",(0,a.jsx)(r.code,{children:"meta-info"})]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import just.decver.DecVer\n\nDecVer.parse("1.0-beta1")\n// res12: Either[DecVer.ParseError, DecVer] = Right(\n//   value = DecVer(\n//     major = Major(value = 1),\n//     minor = Minor(value = 0),\n//     pre = Some(\n//       value = PreRelease(\n//         identifier = List(\n//           Dsv(values = List(Alphabet(value = "beta"), Num(value = "1")))\n//         )\n//       )\n//     ),\n//     buildMetadata = None\n//   )\n// )\n\nval v = DecVer.parse("1.0-3.123.9a+100.0.12abc")\n// v: Either[DecVer.ParseError, DecVer] = Right(\n//   value = DecVer(\n//     major = Major(value = 1),\n//     minor = Minor(value = 0),\n//     pre = Some(\n//       value = PreRelease(\n//         identifier = List(\n//           Dsv(values = List(Num(value = "3"))),\n//           Dsv(values = List(Num(value = "123"))),\n//           Dsv(values = List(Num(value = "9"), Alphabet(value = "a")))\n//         )\n//       )\n//     ),\n//     buildMetadata = Some(\n//       value = BuildMetaInfo(\n//         identifier = List(\n//           Dsv(values = List(Num(value = "100"))),\n//           Dsv(values = List(Num(value = "0"))),\n//           Dsv(values = List(Num(value = "12"), Alphabet(value = "abc")))\n//         )\n//       )\n//     )\n//   )\n// )\n\nv.map(_.render)\n// res13: Either[DecVer.ParseError, String] = Right(\n//   value = "1.0-3.123.9a+100.0.12abc"\n// )\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"compare-decver",children:["Compare ",(0,a.jsx)(r.code,{children:"DecVer"})]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'import just.decver.DecVer\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.1")\n} yield a < b\n// res15: Either[DecVer.ParseError, Boolean] = Right(value = true)\n\nfor {\n a <- DecVer.parse("1.1")\n b <- DecVer.parse("1.0")\n} yield a < b\n// res16: Either[DecVer.ParseError, Boolean] = Right(value = false)\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.1")\n} yield a <= b\n// res17: Either[DecVer.ParseError, Boolean] = Right(value = true)\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.0")\n} yield a <= b\n// res18: Either[DecVer.ParseError, Boolean] = Right(value = true)\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.0")\n} yield a == b\n// res19: Either[DecVer.ParseError, Boolean] = Right(value = true)\n\nfor {\n a <- DecVer.parse("1.1")\n b <- DecVer.parse("1.0")\n} yield a > b\n// res20: Either[DecVer.ParseError, Boolean] = Right(value = true)\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.1")\n} yield a > b\n// res21: Either[DecVer.ParseError, Boolean] = Right(value = false)\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.1")\n} yield a >= b\n// res22: Either[DecVer.ParseError, Boolean] = Right(value = false)\n\nfor {\n a <- DecVer.parse("1.0")\n b <- DecVer.parse("1.0")\n} yield a >= b\n// res23: Either[DecVer.ParseError, Boolean] = Right(value = true)\n\nfor {\n a <- DecVer.parse("1.1")\n b <- DecVer.parse("1.0")\n} yield a >= b\n// res24: Either[DecVer.ParseError, Boolean] = Right(value = true)\n'})}),"\n",(0,a.jsx)(r.h2,{id:"matchers",children:"Matchers"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-scala",children:'DecVer.unsafeParse("1.0").unsafeMatches("1.0 - 2.0")\n// res25: Boolean = true\nDecVer.unsafeParse("1.5").unsafeMatches("1.0 - 2.0")\n// res26: Boolean = true\nDecVer.unsafeParse("2.0").unsafeMatches("1.0 - 2.0")\n// res27: Boolean = true\nDecVer.unsafeParse("0.9").unsafeMatches("1.0 - 2.0")\n// res28: Boolean = false\nDecVer.unsafeParse("2.1").unsafeMatches("1.0 - 2.0")\n// res29: Boolean = false\n\nDecVer.unsafeParse("1.0").unsafeMatches(">1.0 <2.0")\n// res30: Boolean = false\nDecVer.unsafeParse("1.0").unsafeMatches(">=1.0 <=2.0")\n// res31: Boolean = true\nDecVer.unsafeParse("1.5").unsafeMatches(">1.0 <2.0")\n// res32: Boolean = true\nDecVer.unsafeParse("2.0").unsafeMatches(">1.0 <2.0")\n// res33: Boolean = false\nDecVer.unsafeParse("2.0").unsafeMatches(">=1.0 <=2.0")\n// res34: Boolean = true\nDecVer.unsafeParse("0.9").unsafeMatches(">=1.0 <=2.0")\n// res35: Boolean = false\nDecVer.unsafeParse("2.1").unsafeMatches(">=1.0 <=2.0")\n// res36: Boolean = false\n\nDecVer.unsafeParse("1.0").unsafeMatches("1.0 - 2.0 || >3.0 <4.0")\n// res37: Boolean = true\nDecVer.unsafeParse("2.0").unsafeMatches("1.0 - 2.0 || >3.0 <4.0")\n// res38: Boolean = true\nDecVer.unsafeParse("3.0").unsafeMatches("1.0 - 2.0 || >3.0 <=4.0")\n// res39: Boolean = false\nDecVer.unsafeParse("3.1").unsafeMatches("1.0 - 2.0 || >3.0 <=4.0")\n// res40: Boolean = true\nDecVer.unsafeParse("4.0").unsafeMatches("1.0 - 2.0 || >3.0 <=4.0")\n// res41: Boolean = true\n'})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>i});var a=n(6540);const s={},c=a.createContext(s);function l(e){const r=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(c.Provider,{value:r},e.children)}}}]);